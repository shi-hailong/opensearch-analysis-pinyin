import java.nio.file.Files

buildscript {
  ext {
    opensearch_version = System.getProperty("opensearch.version", "2.8.0")
  }

  repositories {
    mavenLocal()
    maven { url "https://aws.oss.sonatype.org/content/repositories/snapshots" }
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
  }

  dependencies {
    classpath "org.opensearch.gradle:build-tools:${opensearch_version}"
  }
}

//plugins {
//  id "co.riiid.gradle" version "0.4.2"
//  // the old co.riiid.gradle is not gradle 7.0 compatible
//  // id "com.github.humblerookie.gradle" version "0.4.4"
//  id "com.github.ben-manes.versions" version '0.36.0'
//}

repositories {
  mavenLocal()
  maven { url "https://aws.oss.sonatype.org/content/repositories/snapshots" }
  mavenCentral()
  maven { url "https://plugins.gradle.org/m2/" }
}

group = 'org.opensearch.plugin'
version = "${opensearchVersion}"

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'opensearch.opensearchplugin'
apply plugin: 'opensearch.testclusters'

opensearchplugin {
  name = 'opensearch-analisys-pinyin'
  description = 'Pinyin Analysis for OpenSearch'
  classname = 'org.opensearch.plugin.analysis.pinyin.AnalysisPinyinPlugin'
  licenseFile = rootProject.file('LICENSE.txt')
  noticeFile = rootProject.file('NOTICE.txt')
}

// In this section you declare the dependencies for your production and test code
dependencies {
  implementation files('lib/nlp-lang-1.7.jar')
  // the yaml tests require a log4j2 dependency, otherwise a dependency is thrown on startup
  runtimeOnly 'org.apache.logging.log4j:log4j-core:2.17.1'
  // testCompile 'org.powermock:powermock-api-mockito:1.6.2'
  // testCompile 'nl.jqno.equalsverifier:equalsverifier:1.7.5'
}
tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
}
// ignore javadoc warnings for now
tasks.withType(Javadoc) {
  options.encoding = "UTF-8"
  options.addStringOption('Xdoclint:none', '-quiet')
}

//githubRelease.doFirst {
//  if (!System.getProperty('GITHUB_TOKEN', '')) {
//    throw new Exception('Missing property GITHUB_TOKEN')
//  }
//
//  // check if zip file is there
//  assert file("build/distributions/opensearch-analisys-pinyin-${version}.zip").exists()
//
//  // rename zip file
//  def currentVersion = version.replace('-SNAPSHOT', '')
//  def filename = "build/distributions/opensearch-analisys-pinyin-${version}.zip"
//  Files.copy(file("build/distributions/opensearch-analisys-pinyin-${version}.zip").toPath(), file(filename).toPath())
//
//  // configuration
//  github {
//    owner = 'aparo'
//    repo = 'opensearch-analisys-pinyin'
//    token = System.getProperty('GITHUB_TOKEN')
//    tagName = currentVersion
//    assets = [ filename ]
//    targetCommitish = 'main'
//  }
//}